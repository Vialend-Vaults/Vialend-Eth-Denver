// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package api

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ApiMetaData contains all meta data concerning the Api contract.
var ApiMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_viaFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_vaultCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_networkid\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_uniPortion\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_compPortion\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_creatorFee\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_adminFee\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"_quoteAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"BurnUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"MintUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"MyLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c1\",\"type\":\"uint256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"VaultWithdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"CEth\",\"outputs\":[{\"internalType\":\"contractICEth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"CTOKENS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"U3Fees0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"U3Fees1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LcFees0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LcFees1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"AccruedProtocolFees0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"AccruedProtocolFees1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enumCONST_ADDRESS.TOK\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_CTOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_WETH\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alloc\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cHigh\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cLow\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compPortion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curComp0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curComp1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"redeemType\",\"type\":\"bool\"}],\"name\":\"emergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feetier\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"baseAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"getQuoteAtTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quote\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTwap\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getUniAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"individualCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTwapDeviation\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contractIUniswapV3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"}],\"name\":\"rebalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"u0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"c0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"c1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ratio\",\"type\":\"uint8\"}],\"name\":\"setCompPortionRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"}],\"name\":\"setMaxTwapDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_team\",\"type\":\"address\"}],\"name\":\"setTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"}],\"name\":\"setTwapDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ratio\",\"type\":\"uint8\"}],\"name\":\"setUniPortionRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stat\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"team\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"triggerFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniPortion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contractViaVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddr\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"vaultWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viaAdminAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viaFactoryAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x6102006040526014805461ffff191690553480156200001d57600080fd5b506040516200592d3803806200592d833981016040819052620000409162000c52565b600160009081557f18ea5137d4b638f7150ef5d67284baa6628dc5dcf2cde6ec4377e9be2774c55f805473c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031991821681179092557fcb38cec8d83a9a42531c8d397680e040e036d175388fcdf7235fb5b422e5aa6f8054732260fac5e5542a773aa44fbcfedf7c193bc2c59990831681179091557f467603cab834a5a38b40f7ed28e0795b080de26a29527be1e7ab5f680de79f0d805473a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4890841681179091557f2dab4d9b48579369fb00e92b6bd8b0c4612f86aac9e6aee0412c6b13993908798054736b175474e89094c44da98b954eedeac495271d0f90851681179091557f62f6fd9233276f21c33a269333cafea465dc45dd6ab5bacae05fced1eabfa0a3805473dac17f958d2ee523a2206206994597c13d831ec790861681179091557fcc045a98e72e59344d4f7091f80bbb561222da6a20eec7c35a2c5e8d6ed5fd83805486169096179095557f74b234455bfe93705121b1ea0a7f3df5e2704ec38fc882a75adc713c35d82697805485169093179092557f4d66331309107d5b746bd21e8fc08a30a974c0bf7d62133a4a010f1a8cf777928054841690911790557fccb1c83d7a853127d675fe159a9ee9d1a3d738ce839a582c245949561f624a188054831690911790557f4047fd3ad83a73e1d8829347b90a3e322e61eb9c75d0314c4cdc5cb61c9b1699805482169092179091557fe22fabd1d82edcbd39191d737db5bd94efff45a4bf001b5f4f888f1a262742df805473b4fbf271143f4fbf7b91a5ded31805e42b2208d69083161790557f2b7a34b1226441c700de37633f62cd4867482033ae8e4598b13d4f0f560d6e76805473c04b0d3107736c32e19f1c62b2af67be61d63a059083161790557f4ff0d9b318b6a135b47922ff61be1dbbe78c58390df29b7d2a3dfa6904c7b742805473d87ba7a50b2e7e660f678a895e4b72e7cb4ccd9c9083161790557fb631e615c2943646c4650dd94e285234e9c0e808dd2e3ed070d02b8ef5a67a56805473dc31ee1784292379fbb2964b3b9c4124d8f89c6090831681179091557fee8f191785ed05c9afdf235b04aeb5f6d93360507d25300efa04b28db2e6ca2880548316734ddc2d193948926d02f9b1fe9e1daa0718270ed59081179091557f8688c0116f0dcc41522ca4d49e07dc56bbd10396f4938f62ff3a7e3a335070ba8054841673c11b1268c1a384e55c48c2391d8d480264a3a7f49081179091557f346a9e6c144ea58751958c48c0f8b24b538d607c688354f57186729a7838ff17805485167339aa39c021dfbae8fac545936693ac917d5e75639081179091557faa598b5e49203a1b194745447261801b947e617705ab7bb30b7c21a839aaac2980548616735d3a536e4d6dbd6114cc1ead35777bab948e36439081179091557f586b50e3017c492f2c7b7c9b2010007f24981bae15a7e3ded36a0ae0e3a3509d8054871673f650c3d88d12db855b8bf7d11be6c55a4e07dcc99081179091557f2a54f7141e2048d90adaa7790a58e8d20f516859527b209072f59d0e5cb241dc805488169095179094557f4c2a123df4ea896b1850e535ccd6efe2c8439002ac7ba6b54a7de53f8e78653c805487169093179092557f8c235f5e8b365e8bb107eaf8f775343a25dc74cc7e119bf29dd4bdcc9edc52c48054861690911790557f07c12e7ef6fb1c2687219e00ee469c8069c785442ec1a022dbdabf4e959c1af78054851690911790557f4ae19d3ed3562d6262c840791dbdd6c3958231e931d7c5dd2bcbc60af32c948c8054841690911790557f9438feb2b3e9936ec81c9fdca70cc047a8e23d5a95b0800f84e749fbf8d722c0805483167320572e4c090f15667cf7378e16fad2ea0e2f3eff1790557f9caba1f9a288d756a4f5ebeef414d6d0465a63a2b59c47f345e1e153b62ae84780548316736ce27497a64fffb5517aa4aee908b1e7eb63b9ff1790557f7e7ce3c877703511108f8e5c2f40355197d71a8510e06f81f72e09d3c5ac87d88054831673cec4a43ebb02f9b80916f1c718338169d6d5c1f01790559091527febae6141bae5521e99e0a8d610356b0f501fea54980b59c84841db43ba7204f460209081527f8d944ef5fc8cdabf35df04e2ef09f35121c37d23a88af14972878c78973bd939805490921673822397d9a55d0fefd20f5c4bcab33c5f65bd28eb17909155336080526001600160a01b038b1660a081905260408051636e9960c360e01b815290519192636e9960c3926004808401938290030181865afa158015620006dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000703919062000d1f565b6001600160a01b031660c0816001600160a01b03168152505060a0516001600160a01b0316638bce6edd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200075d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000783919062000d1f565b600d80546001600160a01b0319166001600160a01b0392831617905589166101808190526040805163ddca3f4360e01b8152905163ddca3f43916004808201926020929091908290030181865afa158015620007e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000809919062000d44565b62ffffff166101e08162ffffff1681525050610180516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200085d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000883919062000d1f565b6001600160a01b0316610120816001600160a01b031681525050610180516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015620008df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000905919062000d1f565b6001600160a01b0316610140816001600160a01b031681525050610180516001600160a01b031663d0c93a7c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000961573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000987919062000d6b565b600e8054600d805463ffffffff60d01b1916600160d11b17905562ffffff9290921662ffffff62ffffff60481b0119909216919091176a4e200000000000000000001790556001600160801b0381166101c0526064620009e8858762000d90565b60ff16111562000a295760405162461bcd60e51b81526020600482015260076024820152662837b93a34b7b760c91b60448201526064015b60405180910390fd5b600d805461ffff60a01b1916600160a01b60ff8881169190910260ff60a81b191691909117600160a81b878316021790915586166000818152600c602090815260408083208380528252808320546001600160a01b03908116610100819052948452600b8352818420610120518216855280845282852054600f80865284872080549285166001600160a01b03199384161790556101405184168088528387528588205491875285882080549286169290931691909117909155868652935292205490911661016052141562000b2c5760405162461bcd60e51b81526020600482015260076024820152660a8625aaecae8d60cb1b604482015260640162000a20565b600d805460ff848116600160b81b0260ff60b81b19918716600160b01b029190911661ffff60b01b199092169190911717905560a05161012051610140516040516310bdba0f60e01b81523060048201526001600160a01b0392831660248201529082166044820152606481018b9052608481018a90529116906310bdba0f9060a4016020604051808303816000875af115801562000bcf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bf5919062000d1f565b6001600160a01b031660e08190526101a081905262000c1357600080fd5b5050505050505050505062000dc4565b80516001600160a01b038116811462000c3b57600080fd5b919050565b805160ff8116811462000c3b57600080fd5b6000806000806000806000806000806101408b8d03121562000c7357600080fd5b62000c7e8b62000c23565b995062000c8e60208c0162000c23565b985060408b0151975060608b0151965062000cac60808c0162000c40565b955062000cbc60a08c0162000c40565b945062000ccc60c08c0162000c40565b935062000cdc60e08c0162000c40565b925062000ced6101008c0162000c40565b6101208c01519092506001600160801b038116811462000d0c57600080fd5b809150509295989b9194979a5092959850565b60006020828403121562000d3257600080fd5b62000d3d8262000c23565b9392505050565b60006020828403121562000d5757600080fd5b815162ffffff8116811462000d3d57600080fd5b60006020828403121562000d7e57600080fd5b81518060020b811462000d3d57600080fd5b600060ff821660ff84168060ff0382111562000dbc57634e487b7160e01b600052601160045260246000fd5b019392505050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e051614917620010166000396000610751015260008181610364015261192101526000610af501526000818161045001528181610f71015281816113a60152818161142b01528181611c4901528181611d2201528181611d7f015281816128bf0152818161294d01528181612e7301528181612f61015281816139b50152613a4601526000818161088f0152818161318501528181613225015261364a01526000818161095f01528181611254015281816114ef01528181611637015281816116ac015281816117ed015281816118c70152818161196301528181611b8e01528181611cdc01528181611f2101528181611ff20152818161209501528181612ab8015281816134c30152613b910152600081816103b0015281816111fa015281816114be01528181611558015281816115cd015281816117570152818161186d0152818161194201528181611b0e01528181611ca801528181611ef401528181611fc70152818161206b01528181612a18015281816134910152613af3015260008181610a08015281816126b90152818161301f015281816135e001526138470152600081816109930152818161114d0152818161121c015281816112760152818161152e0152818161160d015281816116e60152818161188f01526118e901526000818161058801528181610b220152611306015260006107ba01526000818161041c01528181610baf01528181610cc9015281816110a70152611a0501526149176000f3fe6080604052600436106102c75760003560e01c80638a1c4ce71161017e578063cf8d7e25116100d3578063e0af36161161008f578063e9ee79321161006c578063e9ee793214610a6c578063f683715714610aa2578063fa461e3314610ac3578063fbfa77cf14610ae357005b8063e0af3616146109f6578063e7c7cb9114610a2a578063e88958dc14610a4b57005b8063cf8d7e2514610912578063d0c93a7c14610933578063d21220a71461094d578063d27567f214610981578063d3487997146109b5578063d368867f146109d557005b8063b0e21e8a1161013a578063c433c80a11610117578063c433c80a146108b1578063c4a7761e146108d1578063c8a746a6146108e6578063ccac7d8b146108fc57005b8063b0e21e8a14610847578063bbc001c314610868578063bef95a641461087d57005b80638a1c4ce71461073f5780638e843c6c146107875780638ed0d6a6146107a857806398d5fdca146107dc5780639d371c30146107f1578063a0be06f91461082657005b80633aaa36e61161023457806356fb7487116101f057806371c851dd116101cd57806371c851dd146106ca5780637a0ddeef146106ea5780637c7311fe1461070a57806385f2aef21461071f57005b806356fb7487146106415780635d752a9a14610682578063624a177a146106aa57005b80633aaa36e61461051e5780633b05bc37146105765780633c1bda09146105aa5780633cbff3fe146105c057806343c57a27146105e0578063496e122e1461060057005b80630f17937c116102835780630f17937c146103ea578063165523931461040a57806316f0115b1461043e57806326d895451461047257806331dc5b95146104ab578063393ed075146104de57005b80630276650b146102d05780630435a745146102f9578063095cf5c6146103235780630a8e8e01146103435780630d40886d146103525780630dfe16811461039e57005b366102ce57005b005b3480156102dc57600080fd5b506102e660135481565b6040519081526020015b60405180910390f35b34801561030557600080fd5b506014546103139060ff1681565b60405190151581526020016102f0565b34801561032f57600080fd5b506102ce61033e366004613e2f565b610b17565b34801561034f57600080fd5b50005b34801561035e57600080fd5b506103867f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160801b0390911681526020016102f0565b3480156103aa57600080fd5b506103d27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102f0565b3480156103f657600080fd5b506102ce610405366004613e5b565b610ba4565b34801561041657600080fd5b506103d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561044a57600080fd5b506103d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561047e57600080fd5b50600d5461049690600160d01b900463ffffffff1681565b60405163ffffffff90911681526020016102f0565b3480156104b757600080fd5b50600d546104cc90600160a01b900460ff1681565b60405160ff90911681526020016102f0565b3480156104ea57600080fd5b506104fe6104f9366004613e87565b610c48565b6040805194855260208501939093529183015260608201526080016102f0565b34801561052a57600080fd5b50600554600654600754600854600954600a5461054995949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016102f0565b34801561058257600080fd5b506103d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156105b657600080fd5b506102e660125481565b3480156105cc57600080fd5b506102ce6105db366004613ec0565b610cbe565b3480156105ec57600080fd5b506102e66105fb366004613ef2565b610d76565b34801561060c57600080fd5b506103d261061b366004613f4e565b600c6020908152600092835260408084209091529082529020546001600160a01b031681565b34801561064d57600080fd5b506103d261065c366004613f77565b600b6020908152600092835260408084209091529082529020546001600160a01b031681565b34801561068e57600080fd5b50610697610e84565b60405160029190910b81526020016102f0565b3480156106b657600080fd5b506102ce6106c5366004613e5b565b61109c565b3480156106d657600080fd5b506103136106e5366004613f9c565b611140565b3480156106f657600080fd5b506102ce610705366004613fdf565b6112fb565b34801561071657600080fd5b506102ce6116db565b34801561072b57600080fd5b50600d546103d2906001600160a01b031681565b34801561074b57600080fd5b506107737f000000000000000000000000000000000000000000000000000000000000000081565b60405162ffffff90911681526020016102f0565b34801561079357600080fd5b50600e5461069790600160301b900460020b81565b3480156107b457600080fd5b506103d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156107e857600080fd5b506102e6611912565b3480156107fd57600080fd5b5061081161080c366004613e87565b61198c565b604080519283526020830191909152016102f0565b34801561083257600080fd5b50600d546104cc90600160b81b900460ff1681565b34801561085357600080fd5b50600d546104cc90600160c81b900460ff1681565b34801561087457600080fd5b506103136119ea565b34801561088957600080fd5b506103d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156108bd57600080fd5b506102ce6108cc36600461404f565b6119fa565b3480156108dd57600080fd5b50610811611aad565b3480156108f257600080fd5b506102e660105481565b34801561090857600080fd5b506102e660115481565b34801561091e57600080fd5b50600d546104cc90600160a81b900460ff1681565b34801561093f57600080fd5b50600e546106979060020b81565b34801561095957600080fd5b506103d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561098d57600080fd5b506103d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156109c157600080fd5b506102ce6109d03660046140be565b611c3e565b3480156109e157600080fd5b50600e54610697906301000000900460020b81565b348015610a0257600080fd5b506103d27f000000000000000000000000000000000000000000000000000000000000000081565b348015610a3657600080fd5b50600e5461069790600160481b900460020b81565b348015610a5757600080fd5b50600d546104cc90600160b01b900460ff1681565b348015610a7857600080fd5b506103d2610a87366004613e2f565b600f602052600090815260409020546001600160a01b031681565b348015610aae57600080fd5b50600d546104cc90600160c01b900460ff1681565b348015610acf57600080fd5b506102ce610ade3660046140be565b611d17565b348015610aef57600080fd5b506103d27f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b805760405162461bcd60e51b81526020600482015260096024820152683737ba1030b236b4b760b91b60448201526064015b60405180910390fd5b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bec5760405162461bcd60e51b8152600401610b7790614111565b60648160ff161115610c285760405162461bcd60e51b8152602060048201526005602482015264726174696f60d81b6044820152606401610b77565b600d805460ff909216600160a81b0260ff60a81b19909216919091179055565b600080600080610c566119ea565b50610c618686611d75565b6040805185815260208101859052908101839052606081018290529397509195509350915030907f90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b9060800160405180910390a292959194509250565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d065760405162461bcd60e51b8152600401610b7790614111565b60008160020b13610d4c5760405162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b6044820152606401610b77565b600e805462ffffff909216600160481b026bffffff00000000000000000019909216919091179055565b600080610d82866120c7565b90506001600160801b036001600160a01b03821611610e08576000610db06001600160a01b0383168061414c565b9050836001600160a01b0316856001600160a01b031610610de857610de3600160c01b876001600160801b0316836124e6565b610e00565b610e0081876001600160801b0316600160c01b6124e6565b925050610e7b565b6000610e276001600160a01b03831680680100000000000000006124e6565b9050836001600160a01b0316856001600160a01b031610610e5f57610e5a600160801b876001600160801b0316836124e6565b610e77565b610e7781876001600160801b0316600160801b6124e6565b9250505b50949350505050565b600d54600090600160d01b900463ffffffff16610ecc5760405162461bcd60e51b8152600401610b77906020808252600490820152630545741560e41b604082015260600190565b604080516002808252606082018352600092602083019080368337019050509050600d601a9054906101000a900463ffffffff1681600081518110610f1357610f13614181565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110610f4257610f42614181565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063883bdbfd90610fa6908590600401614197565b600060405180830381865afa158015610fc3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610feb91908101906142aa565b50905060008160008151811061100357611003614181565b60200260200101518260018151811061101e5761101e614181565b60200260200101516110309190614376565b600d5490915061105090600160d01b900463ffffffff1660030b826143dc565b935060008160060b1280156110835750600d5461107d90600160d01b900463ffffffff1660030b8261441a565b60060b15155b1561109657836110928161443c565b9450505b50505090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110e45760405162461bcd60e51b8152600401610b7790614111565b60648160ff1611156111205760405162461bcd60e51b8152602060048201526005602482015264726174696f60d81b6044820152606401610b77565b600d805460ff909216600160a01b0260ff60a01b19909216919091179055565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111a65760405162461bcd60e51b81526020600482015260096024820152681b9bdd081d985d5b1d60ba1b6044820152606401610b77565b60006111b06119ea565b9050806111e75760405162461bcd60e51b8152602060048201526005602482015264616c6c6f6360d81b6044820152606401610b77565b8315611241576112416001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000086612660565b821561129b5761129b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000085612660565b6112a6600080611d75565b505060408051878152602081018790526001600160a01b03891693507f97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de92500160405180910390a260019150505b9392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461135f5760405162461bcd60e51b81526020600482015260096024820152683737ba1030b236b4b760b91b6044820152606401610b77565b6014805461ff00191661010017905560405163a34123a760e01b8152600287810b600483015286900b60248201526001600160801b03851660448201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a34123a79060640160408051808303816000875af11580156113ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114129190614460565b50506040516309e3d67b60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634f1eb3d89061146f9030908a908a906001600160801b03908190600401614484565b60408051808303816000875af115801561148d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b191906144c1565b505082156114e4576114e47f000000000000000000000000000000000000000000000000000000000000000084836126b7565b8115611515576115157f000000000000000000000000000000000000000000000000000000000000000083836126b7565b6040516370a0823160e01b81523060048201526115f4907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561159f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c391906144f0565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612660565b6040516370a0823160e01b81523060048201526116d3907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561167e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a291906144f0565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612660565b505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461173f5760405162461bcd60e51b81526020600482015260096024820152681b9bdd081d985d5b1d60ba1b6044820152606401610b77565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156117a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ca91906144f0565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611834573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185891906144f0565b905081156118b4576118b46001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000084612660565b801561190e5761190e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083612660565b5050565b600061198761191f610e84565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610d76565b905090565b600080600080600061199e8787612850565b94509450505092506119b1878785612946565b90955093506119c96001600160801b03831686614509565b94506119de6001600160801b03821685614509565b93505050509250929050565b60006119f46129fe565b50600190565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611a425760405162461bcd60e51b8152600401610b7790614111565b60008163ffffffff1611611a875760405162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b6044820152606401610b77565b600d805463ffffffff909216600160d01b0263ffffffff60d01b19909216919091179055565b600e54600090819081908190611ad89063010000008104600290810b91600160301b9004900b61198c565b91509150600080611ae7612a0e565b6040516370a0823160e01b8152306004820152919350915060009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7991906144f0565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0191906144f0565b909250905081611c118588614509565b611c1b9190614509565b81611c268588614509565b611c309190614509565b975097505050505050509091565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611c9b5760405162461bcd60e51b8152602060048201526002602482015261505360f01b6044820152606401610b77565b611ccf6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163386612660565b611d036001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385612660565b8015611d1157611d11614521565b50505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611c9b5760405162461bcd60e51b815260206004820152600360248201526228299960e91b6044820152606401610b77565b60008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dff9190614549565b50505050509150508660020b6000148015611e1d57508560020b6000145b15611ee257600e54600160301b900460020b158015611e465750600e546301000000900460020b155b15611e5f576000806000809450945094509450506120be565b600e54600090600290611e849063010000008104830b90600160301b9004830b6145db565b611e8e9190614619565b600e5490915060020b80611ea2838561464a565b611eac9190614619565b611eb69190614691565b600e5490975060020b80611eca83856145db565b611ed49190614619565b611ede9190614691565b9750505b611eed878783612b53565b6000611f187f0000000000000000000000000000000000000000000000000000000000000000612d0f565b90506000611f457f0000000000000000000000000000000000000000000000000000000000000000612d0f565b9050611f518282612d80565b600d549198509650600160a01b900460ff1615611fb057611f7489898989612e6f565b600e805462ffffff808c1663010000000265ffffff00000019918c16600160301b029190911668ffffffffffff00000019909216919091171790555b600d54600160a81b900460ff16156120ba57611feb7f0000000000000000000000000000000000000000000000000000000000000000612d0f565b91506120167f0000000000000000000000000000000000000000000000000000000000000000612d0f565b600d5490915060649061203390600160a81b900460ff168461414c565b61203d919061471e565b600d5490955060649061205a90600160a81b900460ff168361414c565b612064919061471e565b93506120907f00000000000000000000000000000000000000000000000000000000000000008661301d565b6120ba7f00000000000000000000000000000000000000000000000000000000000000008561301d565b5050505b92959194509250565b60008060008360020b126120de578260020b6120eb565b8260020b6120eb90614732565b90506120fa620d89e71961474f565b62ffffff168111156121325760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610b77565b60006001821661214657600160801b612158565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612197576080612192826ffff97272373d413259a46990580e213a61414c565b901c90505b60048216156121c15760806121bc826ffff2e50f5f656932ef12357cf3c7fdcc61414c565b901c90505b60088216156121eb5760806121e6826fffe5caca7e10e4e61c3624eaa0941cd061414c565b901c90505b6010821615612215576080612210826fffcb9843d60f6159c9db58835c92664461414c565b901c90505b602082161561223f57608061223a826fff973b41fa98c081472e6896dfb254c061414c565b901c90505b6040821615612269576080612264826fff2ea16466c96a3843ec78b326b5286161414c565b901c90505b608082161561229357608061228e826ffe5dee046a99a2a811c461f1969c305361414c565b901c90505b6101008216156122be5760806122b9826ffcbe86c7900a88aedcffc83b479aa3a461414c565b901c90505b6102008216156122e95760806122e4826ff987a7253ac413176f2b074cf7815e5461414c565b901c90505b61040082161561231457608061230f826ff3392b0822b70005940c7a398e4b70f361414c565b901c90505b61080082161561233f57608061233a826fe7159475a2c29b7443b29c7fa6e889d961414c565b901c90505b61100082161561236a576080612365826fd097f3bdfd2022b8845ad8f792aa582561414c565b901c90505b612000821615612395576080612390826fa9f746462d870fdf8a65dc1f90e061e561414c565b901c90505b6140008216156123c05760806123bb826f70d869a156d2a1b890bb3df62baf32f761414c565b901c90505b6180008216156123eb5760806123e6826f31be135f97d08fd981231505542fcfa661414c565b901c90505b62010000821615612417576080612412826f09aa508b5b7a84e1c677de54f3e99bc961414c565b901c90505b6202000082161561244257608061243d826e5d6af8dedb81196699c329225ee60461414c565b901c90505b6204000082161561246c576080612467826d2216e584f5fa1ea926041bedfe9861414c565b901c90505b6208000082161561249457608061248f826b048a170391f7dc42444e8fa261414c565b901c90505b60008460020b13156124af576124ac8160001961471e565b90505b6124be64010000000082614772565b156124ca5760016124cd565b60005b6124de9060ff16602083901c614509565b949350505050565b600080806000198587098587029250828110838203039150508060001415612520576000841161251557600080fd5b5082900490506112f4565b80841161252c57600080fd5b600084868809808403938111909203919050600061254c86196001614509565b861695869004959384900493600081900304600101905061256d818461414c565b90931792600061257e87600361414c565b600218905061258d818861414c565b612598906002614786565b6125a2908261414c565b90506125ae818861414c565b6125b9906002614786565b6125c3908261414c565b90506125cf818861414c565b6125da906002614786565b6125e4908261414c565b90506125f0818861414c565b6125fb906002614786565b612605908261414c565b9050612611818861414c565b61261c906002614786565b612626908261414c565b9050612632818861414c565b61263d906002614786565b612647908261414c565b9050612653818661414c565b9998505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526126b2908490613090565b505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156126fb576126b28282613162565b60006001821515141561278d576001600160a01b038481166000908152600f60205260409081902054905163db006a7560e01b81526004810186905291169063db006a75906024016020604051808303816000875af1158015612762573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061278691906144f0565b905061280e565b6001600160a01b038481166000908152600f60205260409081902054905163852a12e360e01b81526004810186905291169063852a12e3906024016020604051808303816000875af11580156127e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061280b91906144f0565b90505b8015611d1157601454610100900460ff16611d115760405162461bcd60e51b815260206004820152600260248201526110dd60f21b6044820152606401610b77565b604080513060601b6bffffffffffffffffffffffff191660208083019190915260e885811b603484015284901b60378301528251601a818403018152603a90920190925280519101206000908190819081908190819060405163514ea4bf60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063514ea4bf9060240160a060405180830381865afa15801561290e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612932919061479d565b939c929b5090995097509095509350505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156129a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129cd9190614549565b50505050505090506129f1816129e2886120c7565b6129eb886120c7565b876132f4565b9250925050935093915050565b612a06613390565b610ba2613476565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600f6020526040808220549051633af9e66960e01b815230600482015291928392911690633af9e669906024016020604051808303816000875af1158015612a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aae91906144f0565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600f602052604090819020549051633af9e66960e01b81523060048201529294501690633af9e669906024016020604051808303816000875af1158015612b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b4d91906144f0565b90509091565b8160020b8360020b12612b8d5760405162461bcd60e51b8152602060048201526002602482015261563160f01b6044820152606401610b77565b8060020b8360020b12612bc75760405162461bcd60e51b81526020600482015260026024820152612b1960f11b6044820152606401610b77565b8060020b8260020b13612c015760405162461bcd60e51b8152602060048201526002602482015261563360f01b6044820152606401610b77565b620d89e719600284900b1215612c3e5760405162461bcd60e51b8152602060048201526002602482015261158d60f21b6044820152606401610b77565b612c4b620d89e71961474f565b60020b8260020b1315612c855760405162461bcd60e51b8152602060048201526002602482015261563560f01b6044820152606401610b77565b600e54612c959060020b846147ff565b60020b15612cca5760405162461bcd60e51b81526020600482015260026024820152612b1b60f11b6044820152606401610b77565b600e54612cda9060020b836147ff565b60020b156126b25760405162461bcd60e51b8152602060048201526002602482015261563760f01b6044820152606401610b77565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015612d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d7a91906144f0565b92915050565b6000806000612d8d611912565b90506000612d9b828761414c565b905084811115612e0a57600d54606490612dbf90600160a01b900460ff168861414c565b612dc9919061471e565b600d54909450612e0390606490612dea90600160a01b900460ff168861414c565b612df4919061471e565b612dfe848761414c565b6134ea565b9250612e66565b600d54606490612e2490600160a01b900460ff168761414c565b612e2e919061471e565b600d54909350612e6390606490612e4f90600160a01b900460ff168961414c565b612e59919061471e565b612dfe848661471e565b93505b50509250929050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ef39190614549565b50505050505090506000612f1a82612f0a886120c7565b612f13886120c7565b8787613500565b604051633c8a7d8d60e01b8152306004820152600288810b602483015287900b60448201526001600160801b038216606482015260a06084820152600060a48201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633c8a7d8d9060c40160408051808303816000875af1158015612fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fd59190614460565b5050806001600160801b03168560020b8760020b7f7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a560405160405180910390a4505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561306957613060816135c4565b61190e81613648565b6001600160a01b038083166000908152600f60205260409020546126b291849116836136c4565b60006130e5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166138309092919063ffffffff16565b8051909150156126b257808060200190518101906131039190614821565b6126b25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b77565b60006001821515141561320f5760405163db006a7560e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063db006a75906024016020604051808303816000875af11580156131d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131fa91906144f0565b90508061320a5761320a4761383f565b6132aa565b60405163852a12e360e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063852a12e3906024016020604051808303816000875af1158015613276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061329a91906144f0565b9050806132aa576132aa8361383f565b80156126b257601454610100900460ff166126b25760405162461bcd60e51b815260206004820152600a602482015269043657468206e6f7420360b41b6044820152606401610b77565b600080836001600160a01b0316856001600160a01b03161115613315579293925b846001600160a01b0316866001600160a01b031611613340576133398585856138b4565b9150613387565b836001600160a01b0316866001600160a01b03161015613379576133658685856138b4565b9150613372858785613927565b9050613387565b613384858585613927565b90505b94509492505050565b600e546301000000900460020b1580156133b45750600e54600160301b900460020b155b156133bb57565b600e546000906133e09063010000008104600290810b91600160301b9004900b612850565b5050600e5492935060009283925082915081906134139063010000008104600290810b91600160301b9004900b87613971565b93509350935093506000856001600160801b03161115613448576134378483614786565b6001556134448382614786565b6002555b600e5461346a9063010000008104600290810b91600160301b9004900b612850565b50505050505050505050565b600080613481613ae9565b909250905081156134b8576134b87f00000000000000000000000000000000000000000000000000000000000000008360016126b7565b801561190e5761190e7f00000000000000000000000000000000000000000000000000000000000000008260016126b7565b60008183106134f957816112f4565b5090919050565b6000836001600160a01b0316856001600160a01b03161115613520579293925b846001600160a01b0316866001600160a01b03161161354b57613544858585613c00565b90506135bb565b836001600160a01b0316866001600160a01b031610156135ad576000613572878686613c00565b90506000613581878986613c6a565b9050806001600160801b0316826001600160801b0316106135a257806135a4565b815b925050506135bb565b6135b8858584613c6a565b90505b95945050505050565b801561364557604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561362c57600080fd5b505af1158015613640573d6000803e3d6000fd5b505050505b50565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631249c58b6203d090836040518363ffffffff1660e01b81526004016000604051808303818589803b1580156136a757600080fd5b5088f11580156136bb573d6000803e3d6000fd5b50505050505050565b60405163095ea7b360e01b81526001600160a01b038381166004830152602482018390526000919085169063095ea7b3906044016020604051808303816000875af1158015613717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061373b9190614821565b5060405163140e25ad60e31b8152600481018390526000906001600160a01b0385169063a0712d68906024016020604051808303816000875af1158015613786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137aa91906144f0565b905080156124de57604080518181526027818301527f6d696e74526573756c74206973206e6f7420302c207468657265207761732061606082015266371032b93937b960c91b60808201526020810183905290517f8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad9181900360a00190a1949350505050565b60606124de8484600085613ca0565b8015613645577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156138a057600080fd5b505af11580156116d3573d6000803e3d6000fd5b6000826001600160a01b0316846001600160a01b031611156138d4579192915b6001600160a01b03841661391d6fffffffffffffffffffffffffffffffff60601b606085901b16613905878761483e565b6001600160a01b0316866001600160a01b03166124e6565b6124de919061471e565b6000826001600160a01b0316846001600160a01b03161115613947579192915b6124de6001600160801b03831661395e868661483e565b6001600160a01b0316600160601b6124e6565b60008080806001600160801b03851615613a2f5760405163a34123a760e01b8152600288810b600483015287900b60248201526001600160801b03861660448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a34123a79060640160408051808303816000875af1158015613a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a299190614460565b90945092505b6040516309e3d67b60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634f1eb3d890613a8a9030908b908b906001600160801b03908190600401614484565b60408051808303816000875af1158015613aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613acc91906144c1565b94989397506001600160801b039081169650909316935090915050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600f60205260408082205490516370a0823160e01b8152306004820152919283929116906370a0823190602401602060405180830381865afa158015613b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b8791906144f0565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600f6020526040908190205490516370a0823160e01b815230600482015292945016906370a0823190602401602060405180830381865afa158015612b29573d6000803e3d6000fd5b6000826001600160a01b0316846001600160a01b03161115613c20579192915b6000613c43856001600160a01b0316856001600160a01b0316600160601b6124e6565b90506135bb613c658483613c57898961483e565b6001600160a01b03166124e6565b613dc6565b6000826001600160a01b0316846001600160a01b03161115613c8a579192915b6124de613c6583600160601b613c57888861483e565b606082471015613d015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b77565b6001600160a01b0385163b613d585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b77565b600080866001600160a01b03168587604051613d749190614892565b60006040518083038185875af1925050503d8060008114613db1576040519150601f19603f3d011682016040523d82523d6000602084013e613db6565b606091505b5091509150610e77828286613de1565b806001600160801b0381168114613ddc57600080fd5b919050565b60608315613df05750816112f4565b825115613e005782518084602001fd5b8160405162461bcd60e51b8152600401610b7791906148ae565b6001600160a01b038116811461364557600080fd5b600060208284031215613e4157600080fd5b81356112f481613e1a565b60ff8116811461364557600080fd5b600060208284031215613e6d57600080fd5b81356112f481613e4c565b8060020b811461364557600080fd5b60008060408385031215613e9a57600080fd5b8235613ea581613e78565b91506020830135613eb581613e78565b809150509250929050565b600060208284031215613ed257600080fd5b81356112f481613e78565b6001600160801b038116811461364557600080fd5b60008060008060808587031215613f0857600080fd5b8435613f1381613e78565b93506020850135613f2381613edd565b92506040850135613f3381613e1a565b91506060850135613f4381613e1a565b939692955090935050565b60008060408385031215613f6157600080fd5b82359150602083013560058110613eb557600080fd5b60008060408385031215613f8a57600080fd5b823591506020830135613eb581613e1a565b600080600060608486031215613fb157600080fd5b8335613fbc81613e1a565b95602085013595506040909401359392505050565b801515811461364557600080fd5b60008060008060008060c08789031215613ff857600080fd5b863561400381613e78565b9550602087013561401381613e78565b9450604087013561402381613edd565b9350606087013592506080870135915060a087013561404181613fd1565b809150509295509295509295565b60006020828403121561406157600080fd5b813563ffffffff811681146112f457600080fd5b60008083601f84011261408757600080fd5b50813567ffffffffffffffff81111561409f57600080fd5b6020830191508360208285010111156140b757600080fd5b9250929050565b600080600080606085870312156140d457600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156140f957600080fd5b61410587828801614075565b95989497509550505050565b6020808252600b908201526a3737ba1031b932b0ba37b960a91b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561416657614166614136565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156141d557835163ffffffff16835292840192918401916001016141b3565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561420a5761420a61416b565b604052919050565b600067ffffffffffffffff82111561422c5761422c61416b565b5060051b60200190565b600082601f83011261424757600080fd5b8151602061425c61425783614212565b6141e1565b82815260059290921b8401810191818101908684111561427b57600080fd5b8286015b8481101561429f57805161429281613e1a565b835291830191830161427f565b509695505050505050565b600080604083850312156142bd57600080fd5b825167ffffffffffffffff808211156142d557600080fd5b818501915085601f8301126142e957600080fd5b815160206142f961425783614212565b82815260059290921b8401810191818101908984111561431857600080fd5b948201945b838610156143465785518060060b81146143375760008081fd5b8252948201949082019061431d565b9188015191965090935050508082111561435f57600080fd5b5061436c85828601614236565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff19018312811516156143a1576143a1614136565b81667fffffffffffff0183138116156143bc576143bc614136565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b806143f3576143f36143c6565b667fffffffffffff1982146000198214161561441157614411614136565b90059392505050565b60008260060b8061442d5761442d6143c6565b808360060b0791505092915050565b60008160020b627fffff1981141561445657614456614136565b6000190192915050565b6000806040838503121561447357600080fd5b505080516020909101519092909150565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b600080604083850312156144d457600080fd5b82516144df81613edd565b6020840151909250613eb581613edd565b60006020828403121561450257600080fd5b5051919050565b6000821982111561451c5761451c614136565b500190565b634e487b7160e01b600052600160045260246000fd5b805161ffff81168114613ddc57600080fd5b600080600080600080600060e0888a03121561456457600080fd5b875161456f81613e1a565b602089015190975061458081613e78565b955061458e60408901614537565b945061459c60608901614537565b93506145aa60808901614537565b925060a08801516145ba81613e4c565b60c08901519092506145cb81613fd1565b8091505092959891949750929550565b60008160020b8360020b6000811281627fffff190183128115161561460257614602614136565b81627fffff0183138116156143bc576143bc614136565b60008160020b8360020b80614630576146306143c6565b627fffff1982146000198214161561441157614411614136565b60008160020b8360020b6000821282627fffff0382138115161561467057614670614136565b82627fffff1903821281161561468857614688614136565b50019392505050565b60008160020b8360020b627fffff6000821360008413838304851182821616156146bd576146bd614136565b627fffff1960008512828116878305871216156146dc576146dc614136565b600087129250858205871284841616156146f8576146f8614136565b8585058712818416161561470e5761470e614136565b5050509290910295945050505050565b60008261472d5761472d6143c6565b500490565b6000600160ff1b82141561474857614748614136565b5060000390565b60008160020b627fffff1981141561476957614769614136565b60000392915050565b600082614781576147816143c6565b500690565b60008282101561479857614798614136565b500390565b600080600080600060a086880312156147b557600080fd5b85516147c081613edd565b80955050602086015193506040860151925060608601516147e081613edd565b60808701519092506147f181613edd565b809150509295509295909350565b60008260020b80614812576148126143c6565b808360020b0791505092915050565b60006020828403121561483357600080fd5b81516112f481613fd1565b60006001600160a01b038381169083168181101561485e5761485e614136565b039392505050565b60005b83811015614881578181015183820152602001614869565b83811115611d115750506000910152565b600082516148a4818460208701614866565b9190910192915050565b60208152600082518060208401526148cd816040850160208701614866565b601f01601f1916919091016040019291505056fea2646970667358221220b30d714f19656925a782fb465a478bf3ec3e8e2215edfc73287de53c5a94a72564736f6c634300080a0033",
}

// ApiABI is the input ABI used to generate the binding from.
// Deprecated: Use ApiMetaData.ABI instead.
var ApiABI = ApiMetaData.ABI

// ApiBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ApiMetaData.Bin instead.
var ApiBin = ApiMetaData.Bin

// DeployApi deploys a new Ethereum contract, binding an instance of Api to it.
func DeployApi(auth *bind.TransactOpts, backend bind.ContractBackend, _viaFactory common.Address, _pool common.Address, _vaultCap *big.Int, _individualCap *big.Int, _networkid uint8, _uniPortion uint8, _compPortion uint8, _creatorFee uint8, _adminFee uint8, _quoteAmount *big.Int) (common.Address, *types.Transaction, *Api, error) {
	parsed, err := ApiMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ApiBin), backend, _viaFactory, _pool, _vaultCap, _individualCap, _networkid, _uniPortion, _compPortion, _creatorFee, _adminFee, _quoteAmount)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// Api is an auto generated Go binding around an Ethereum contract.
type Api struct {
	ApiCaller     // Read-only binding to the contract
	ApiTransactor // Write-only binding to the contract
	ApiFilterer   // Log filterer for contract events
}

// ApiCaller is an auto generated read-only Go binding around an Ethereum contract.
type ApiCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ApiTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ApiFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ApiSession struct {
	Contract     *Api              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ApiCallerSession struct {
	Contract *ApiCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ApiTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ApiTransactorSession struct {
	Contract     *ApiTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiRaw is an auto generated low-level Go binding around an Ethereum contract.
type ApiRaw struct {
	Contract *Api // Generic contract binding to access the raw methods on
}

// ApiCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ApiCallerRaw struct {
	Contract *ApiCaller // Generic read-only contract binding to access the raw methods on
}

// ApiTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ApiTransactorRaw struct {
	Contract *ApiTransactor // Generic write-only contract binding to access the raw methods on
}

// NewApi creates a new instance of Api, bound to a specific deployed contract.
func NewApi(address common.Address, backend bind.ContractBackend) (*Api, error) {
	contract, err := bindApi(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// NewApiCaller creates a new read-only instance of Api, bound to a specific deployed contract.
func NewApiCaller(address common.Address, caller bind.ContractCaller) (*ApiCaller, error) {
	contract, err := bindApi(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ApiCaller{contract: contract}, nil
}

// NewApiTransactor creates a new write-only instance of Api, bound to a specific deployed contract.
func NewApiTransactor(address common.Address, transactor bind.ContractTransactor) (*ApiTransactor, error) {
	contract, err := bindApi(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ApiTransactor{contract: contract}, nil
}

// NewApiFilterer creates a new log filterer instance of Api, bound to a specific deployed contract.
func NewApiFilterer(address common.Address, filterer bind.ContractFilterer) (*ApiFilterer, error) {
	contract, err := bindApi(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ApiFilterer{contract: contract}, nil
}

// bindApi binds a generic wrapper to an already deployed contract.
func bindApi(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ApiABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.ApiCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.contract.Transact(opts, method, params...)
}

// CEth is a free data retrieval call binding the contract method 0xbef95a64.
//
// Solidity: function CEth() view returns(address)
func (_Api *ApiCaller) CEth(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "CEth")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CEth is a free data retrieval call binding the contract method 0xbef95a64.
//
// Solidity: function CEth() view returns(address)
func (_Api *ApiSession) CEth() (common.Address, error) {
	return _Api.Contract.CEth(&_Api.CallOpts)
}

// CEth is a free data retrieval call binding the contract method 0xbef95a64.
//
// Solidity: function CEth() view returns(address)
func (_Api *ApiCallerSession) CEth() (common.Address, error) {
	return _Api.Contract.CEth(&_Api.CallOpts)
}

// CTOKENS is a free data retrieval call binding the contract method 0x56fb7487.
//
// Solidity: function CTOKENS(uint256 , address ) view returns(address)
func (_Api *ApiCaller) CTOKENS(opts *bind.CallOpts, arg0 *big.Int, arg1 common.Address) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "CTOKENS", arg0, arg1)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CTOKENS is a free data retrieval call binding the contract method 0x56fb7487.
//
// Solidity: function CTOKENS(uint256 , address ) view returns(address)
func (_Api *ApiSession) CTOKENS(arg0 *big.Int, arg1 common.Address) (common.Address, error) {
	return _Api.Contract.CTOKENS(&_Api.CallOpts, arg0, arg1)
}

// CTOKENS is a free data retrieval call binding the contract method 0x56fb7487.
//
// Solidity: function CTOKENS(uint256 , address ) view returns(address)
func (_Api *ApiCallerSession) CTOKENS(arg0 *big.Int, arg1 common.Address) (common.Address, error) {
	return _Api.Contract.CTOKENS(&_Api.CallOpts, arg0, arg1)
}

// Fees is a free data retrieval call binding the contract method 0x3aaa36e6.
//
// Solidity: function Fees() view returns(uint256 U3Fees0, uint256 U3Fees1, uint256 LcFees0, uint256 LcFees1, uint256 AccruedProtocolFees0, uint256 AccruedProtocolFees1)
func (_Api *ApiCaller) Fees(opts *bind.CallOpts) (struct {
	U3Fees0              *big.Int
	U3Fees1              *big.Int
	LcFees0              *big.Int
	LcFees1              *big.Int
	AccruedProtocolFees0 *big.Int
	AccruedProtocolFees1 *big.Int
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "Fees")

	outstruct := new(struct {
		U3Fees0              *big.Int
		U3Fees1              *big.Int
		LcFees0              *big.Int
		LcFees1              *big.Int
		AccruedProtocolFees0 *big.Int
		AccruedProtocolFees1 *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.U3Fees0 = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.U3Fees1 = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.LcFees0 = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.LcFees1 = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.AccruedProtocolFees0 = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.AccruedProtocolFees1 = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Fees is a free data retrieval call binding the contract method 0x3aaa36e6.
//
// Solidity: function Fees() view returns(uint256 U3Fees0, uint256 U3Fees1, uint256 LcFees0, uint256 LcFees1, uint256 AccruedProtocolFees0, uint256 AccruedProtocolFees1)
func (_Api *ApiSession) Fees() (struct {
	U3Fees0              *big.Int
	U3Fees1              *big.Int
	LcFees0              *big.Int
	LcFees1              *big.Int
	AccruedProtocolFees0 *big.Int
	AccruedProtocolFees1 *big.Int
}, error) {
	return _Api.Contract.Fees(&_Api.CallOpts)
}

// Fees is a free data retrieval call binding the contract method 0x3aaa36e6.
//
// Solidity: function Fees() view returns(uint256 U3Fees0, uint256 U3Fees1, uint256 LcFees0, uint256 LcFees1, uint256 AccruedProtocolFees0, uint256 AccruedProtocolFees1)
func (_Api *ApiCallerSession) Fees() (struct {
	U3Fees0              *big.Int
	U3Fees1              *big.Int
	LcFees0              *big.Int
	LcFees1              *big.Int
	AccruedProtocolFees0 *big.Int
	AccruedProtocolFees1 *big.Int
}, error) {
	return _Api.Contract.Fees(&_Api.CallOpts)
}

// TOKEN is a free data retrieval call binding the contract method 0x496e122e.
//
// Solidity: function TOKEN(uint256 , uint8 ) view returns(address)
func (_Api *ApiCaller) TOKEN(opts *bind.CallOpts, arg0 *big.Int, arg1 uint8) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "TOKEN", arg0, arg1)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TOKEN is a free data retrieval call binding the contract method 0x496e122e.
//
// Solidity: function TOKEN(uint256 , uint8 ) view returns(address)
func (_Api *ApiSession) TOKEN(arg0 *big.Int, arg1 uint8) (common.Address, error) {
	return _Api.Contract.TOKEN(&_Api.CallOpts, arg0, arg1)
}

// TOKEN is a free data retrieval call binding the contract method 0x496e122e.
//
// Solidity: function TOKEN(uint256 , uint8 ) view returns(address)
func (_Api *ApiCallerSession) TOKEN(arg0 *big.Int, arg1 uint8) (common.Address, error) {
	return _Api.Contract.TOKEN(&_Api.CallOpts, arg0, arg1)
}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiCaller) CTOKEN(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_CTOKEN", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiSession) CTOKEN(arg0 common.Address) (common.Address, error) {
	return _Api.Contract.CTOKEN(&_Api.CallOpts, arg0)
}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiCallerSession) CTOKEN(arg0 common.Address) (common.Address, error) {
	return _Api.Contract.CTOKEN(&_Api.CallOpts, arg0)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCaller) WETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_WETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCallerSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// AdminFee is a free data retrieval call binding the contract method 0xa0be06f9.
//
// Solidity: function adminFee() view returns(uint8)
func (_Api *ApiCaller) AdminFee(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "adminFee")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// AdminFee is a free data retrieval call binding the contract method 0xa0be06f9.
//
// Solidity: function adminFee() view returns(uint8)
func (_Api *ApiSession) AdminFee() (uint8, error) {
	return _Api.Contract.AdminFee(&_Api.CallOpts)
}

// AdminFee is a free data retrieval call binding the contract method 0xa0be06f9.
//
// Solidity: function adminFee() view returns(uint8)
func (_Api *ApiCallerSession) AdminFee() (uint8, error) {
	return _Api.Contract.AdminFee(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCaller) CHigh(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cHigh")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCallerSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCaller) CLow(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cLow")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCallerSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiCaller) CompPortion(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compPortion")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiSession) CompPortion() (uint8, error) {
	return _Api.Contract.CompPortion(&_Api.CallOpts)
}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiCallerSession) CompPortion() (uint8, error) {
	return _Api.Contract.CompPortion(&_Api.CallOpts)
}

// CreatorAddr is a free data retrieval call binding the contract method 0x16552393.
//
// Solidity: function creatorAddr() view returns(address)
func (_Api *ApiCaller) CreatorAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "creatorAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CreatorAddr is a free data retrieval call binding the contract method 0x16552393.
//
// Solidity: function creatorAddr() view returns(address)
func (_Api *ApiSession) CreatorAddr() (common.Address, error) {
	return _Api.Contract.CreatorAddr(&_Api.CallOpts)
}

// CreatorAddr is a free data retrieval call binding the contract method 0x16552393.
//
// Solidity: function creatorAddr() view returns(address)
func (_Api *ApiCallerSession) CreatorAddr() (common.Address, error) {
	return _Api.Contract.CreatorAddr(&_Api.CallOpts)
}

// CreatorFee is a free data retrieval call binding the contract method 0xe88958dc.
//
// Solidity: function creatorFee() view returns(uint8)
func (_Api *ApiCaller) CreatorFee(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "creatorFee")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CreatorFee is a free data retrieval call binding the contract method 0xe88958dc.
//
// Solidity: function creatorFee() view returns(uint8)
func (_Api *ApiSession) CreatorFee() (uint8, error) {
	return _Api.Contract.CreatorFee(&_Api.CallOpts)
}

// CreatorFee is a free data retrieval call binding the contract method 0xe88958dc.
//
// Solidity: function creatorFee() view returns(uint8)
func (_Api *ApiCallerSession) CreatorFee() (uint8, error) {
	return _Api.Contract.CreatorFee(&_Api.CallOpts)
}

// CurComp0 is a free data retrieval call binding the contract method 0xc8a746a6.
//
// Solidity: function curComp0() view returns(uint256)
func (_Api *ApiCaller) CurComp0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "curComp0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CurComp0 is a free data retrieval call binding the contract method 0xc8a746a6.
//
// Solidity: function curComp0() view returns(uint256)
func (_Api *ApiSession) CurComp0() (*big.Int, error) {
	return _Api.Contract.CurComp0(&_Api.CallOpts)
}

// CurComp0 is a free data retrieval call binding the contract method 0xc8a746a6.
//
// Solidity: function curComp0() view returns(uint256)
func (_Api *ApiCallerSession) CurComp0() (*big.Int, error) {
	return _Api.Contract.CurComp0(&_Api.CallOpts)
}

// CurComp1 is a free data retrieval call binding the contract method 0xccac7d8b.
//
// Solidity: function curComp1() view returns(uint256)
func (_Api *ApiCaller) CurComp1(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "curComp1")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CurComp1 is a free data retrieval call binding the contract method 0xccac7d8b.
//
// Solidity: function curComp1() view returns(uint256)
func (_Api *ApiSession) CurComp1() (*big.Int, error) {
	return _Api.Contract.CurComp1(&_Api.CallOpts)
}

// CurComp1 is a free data retrieval call binding the contract method 0xccac7d8b.
//
// Solidity: function curComp1() view returns(uint256)
func (_Api *ApiCallerSession) CurComp1() (*big.Int, error) {
	return _Api.Contract.CurComp1(&_Api.CallOpts)
}

// Feetier is a free data retrieval call binding the contract method 0x8a1c4ce7.
//
// Solidity: function feetier() view returns(uint24)
func (_Api *ApiCaller) Feetier(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "feetier")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Feetier is a free data retrieval call binding the contract method 0x8a1c4ce7.
//
// Solidity: function feetier() view returns(uint24)
func (_Api *ApiSession) Feetier() (*big.Int, error) {
	return _Api.Contract.Feetier(&_Api.CallOpts)
}

// Feetier is a free data retrieval call binding the contract method 0x8a1c4ce7.
//
// Solidity: function feetier() view returns(uint24)
func (_Api *ApiCallerSession) Feetier() (*big.Int, error) {
	return _Api.Contract.Feetier(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCaller) GetPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCallerSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCaller) GetQuoteAtTick(opts *bind.CallOpts, tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getQuoteAtTick", tick, baseAmount, baseToken, quoteToken)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCallerSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiCaller) GetTwap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTwap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiSession) GetTwap() (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts)
}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiCallerSession) GetTwap() (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCaller) GetUniAmounts(opts *bind.CallOpts, tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getUniAmounts", tickLower, tickUpper)

	outstruct := new(struct {
		Amount0 *big.Int
		Amount1 *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount0 = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Amount1 = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCallerSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiCaller) IndividualCap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "individualCap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiSession) IndividualCap() (*big.Int, error) {
	return _Api.Contract.IndividualCap(&_Api.CallOpts)
}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiCallerSession) IndividualCap() (*big.Int, error) {
	return _Api.Contract.IndividualCap(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCaller) MaxTwapDeviation(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "maxTwapDeviation")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCallerSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCaller) Pool(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "pool")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCallerSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// ProtocolFee is a free data retrieval call binding the contract method 0xb0e21e8a.
//
// Solidity: function protocolFee() view returns(uint8)
func (_Api *ApiCaller) ProtocolFee(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocolFee")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// ProtocolFee is a free data retrieval call binding the contract method 0xb0e21e8a.
//
// Solidity: function protocolFee() view returns(uint8)
func (_Api *ApiSession) ProtocolFee() (uint8, error) {
	return _Api.Contract.ProtocolFee(&_Api.CallOpts)
}

// ProtocolFee is a free data retrieval call binding the contract method 0xb0e21e8a.
//
// Solidity: function protocolFee() view returns(uint8)
func (_Api *ApiCallerSession) ProtocolFee() (uint8, error) {
	return _Api.Contract.ProtocolFee(&_Api.CallOpts)
}

// QuoteAmount is a free data retrieval call binding the contract method 0x0d40886d.
//
// Solidity: function quoteAmount() view returns(uint128)
func (_Api *ApiCaller) QuoteAmount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "quoteAmount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// QuoteAmount is a free data retrieval call binding the contract method 0x0d40886d.
//
// Solidity: function quoteAmount() view returns(uint128)
func (_Api *ApiSession) QuoteAmount() (*big.Int, error) {
	return _Api.Contract.QuoteAmount(&_Api.CallOpts)
}

// QuoteAmount is a free data retrieval call binding the contract method 0x0d40886d.
//
// Solidity: function quoteAmount() view returns(uint128)
func (_Api *ApiCallerSession) QuoteAmount() (*big.Int, error) {
	return _Api.Contract.QuoteAmount(&_Api.CallOpts)
}

// Stat is a free data retrieval call binding the contract method 0x0435a745.
//
// Solidity: function stat() view returns(bool)
func (_Api *ApiCaller) Stat(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "stat")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Stat is a free data retrieval call binding the contract method 0x0435a745.
//
// Solidity: function stat() view returns(bool)
func (_Api *ApiSession) Stat() (bool, error) {
	return _Api.Contract.Stat(&_Api.CallOpts)
}

// Stat is a free data retrieval call binding the contract method 0x0435a745.
//
// Solidity: function stat() view returns(bool)
func (_Api *ApiCallerSession) Stat() (bool, error) {
	return _Api.Contract.Stat(&_Api.CallOpts)
}

// Team is a free data retrieval call binding the contract method 0x85f2aef2.
//
// Solidity: function team() view returns(address)
func (_Api *ApiCaller) Team(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "team")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Team is a free data retrieval call binding the contract method 0x85f2aef2.
//
// Solidity: function team() view returns(address)
func (_Api *ApiSession) Team() (common.Address, error) {
	return _Api.Contract.Team(&_Api.CallOpts)
}

// Team is a free data retrieval call binding the contract method 0x85f2aef2.
//
// Solidity: function team() view returns(address)
func (_Api *ApiCallerSession) Team() (common.Address, error) {
	return _Api.Contract.Team(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCaller) TickSpacing(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "tickSpacing")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCallerSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCaller) Token0(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token0")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCallerSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCaller) Token1(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token1")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCallerSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// TriggerFee is a free data retrieval call binding the contract method 0xf6837157.
//
// Solidity: function triggerFee() view returns(uint8)
func (_Api *ApiCaller) TriggerFee(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "triggerFee")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// TriggerFee is a free data retrieval call binding the contract method 0xf6837157.
//
// Solidity: function triggerFee() view returns(uint8)
func (_Api *ApiSession) TriggerFee() (uint8, error) {
	return _Api.Contract.TriggerFee(&_Api.CallOpts)
}

// TriggerFee is a free data retrieval call binding the contract method 0xf6837157.
//
// Solidity: function triggerFee() view returns(uint8)
func (_Api *ApiCallerSession) TriggerFee() (uint8, error) {
	return _Api.Contract.TriggerFee(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCaller) TwapDuration(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "twapDuration")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCallerSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiCaller) UniPortion(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "uniPortion")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiSession) UniPortion() (uint8, error) {
	return _Api.Contract.UniPortion(&_Api.CallOpts)
}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiCallerSession) UniPortion() (uint8, error) {
	return _Api.Contract.UniPortion(&_Api.CallOpts)
}

// Vault is a free data retrieval call binding the contract method 0xfbfa77cf.
//
// Solidity: function vault() view returns(address)
func (_Api *ApiCaller) Vault(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "vault")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Vault is a free data retrieval call binding the contract method 0xfbfa77cf.
//
// Solidity: function vault() view returns(address)
func (_Api *ApiSession) Vault() (common.Address, error) {
	return _Api.Contract.Vault(&_Api.CallOpts)
}

// Vault is a free data retrieval call binding the contract method 0xfbfa77cf.
//
// Solidity: function vault() view returns(address)
func (_Api *ApiCallerSession) Vault() (common.Address, error) {
	return _Api.Contract.Vault(&_Api.CallOpts)
}

// VaultAddr is a free data retrieval call binding the contract method 0xd27567f2.
//
// Solidity: function vaultAddr() view returns(address)
func (_Api *ApiCaller) VaultAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "vaultAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// VaultAddr is a free data retrieval call binding the contract method 0xd27567f2.
//
// Solidity: function vaultAddr() view returns(address)
func (_Api *ApiSession) VaultAddr() (common.Address, error) {
	return _Api.Contract.VaultAddr(&_Api.CallOpts)
}

// VaultAddr is a free data retrieval call binding the contract method 0xd27567f2.
//
// Solidity: function vaultAddr() view returns(address)
func (_Api *ApiCallerSession) VaultAddr() (common.Address, error) {
	return _Api.Contract.VaultAddr(&_Api.CallOpts)
}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiCaller) VaultCap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "vaultCap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiSession) VaultCap() (*big.Int, error) {
	return _Api.Contract.VaultCap(&_Api.CallOpts)
}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiCallerSession) VaultCap() (*big.Int, error) {
	return _Api.Contract.VaultCap(&_Api.CallOpts)
}

// ViaAdminAddr is a free data retrieval call binding the contract method 0x3b05bc37.
//
// Solidity: function viaAdminAddr() view returns(address)
func (_Api *ApiCaller) ViaAdminAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "viaAdminAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ViaAdminAddr is a free data retrieval call binding the contract method 0x3b05bc37.
//
// Solidity: function viaAdminAddr() view returns(address)
func (_Api *ApiSession) ViaAdminAddr() (common.Address, error) {
	return _Api.Contract.ViaAdminAddr(&_Api.CallOpts)
}

// ViaAdminAddr is a free data retrieval call binding the contract method 0x3b05bc37.
//
// Solidity: function viaAdminAddr() view returns(address)
func (_Api *ApiCallerSession) ViaAdminAddr() (common.Address, error) {
	return _Api.Contract.ViaAdminAddr(&_Api.CallOpts)
}

// ViaFactoryAddr is a free data retrieval call binding the contract method 0x8ed0d6a6.
//
// Solidity: function viaFactoryAddr() view returns(address)
func (_Api *ApiCaller) ViaFactoryAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "viaFactoryAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ViaFactoryAddr is a free data retrieval call binding the contract method 0x8ed0d6a6.
//
// Solidity: function viaFactoryAddr() view returns(address)
func (_Api *ApiSession) ViaFactoryAddr() (common.Address, error) {
	return _Api.Contract.ViaFactoryAddr(&_Api.CallOpts)
}

// ViaFactoryAddr is a free data retrieval call binding the contract method 0x8ed0d6a6.
//
// Solidity: function viaFactoryAddr() view returns(address)
func (_Api *ApiCallerSession) ViaFactoryAddr() (common.Address, error) {
	return _Api.Contract.ViaFactoryAddr(&_Api.CallOpts)
}

// Alloc is a paid mutator transaction binding the contract method 0xbbc001c3.
//
// Solidity: function alloc() returns(bool)
func (_Api *ApiTransactor) Alloc(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "alloc")
}

// Alloc is a paid mutator transaction binding the contract method 0xbbc001c3.
//
// Solidity: function alloc() returns(bool)
func (_Api *ApiSession) Alloc() (*types.Transaction, error) {
	return _Api.Contract.Alloc(&_Api.TransactOpts)
}

// Alloc is a paid mutator transaction binding the contract method 0xbbc001c3.
//
// Solidity: function alloc() returns(bool)
func (_Api *ApiTransactorSession) Alloc() (*types.Transaction, error) {
	return _Api.Contract.Alloc(&_Api.TransactOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactor) CallFunds(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "callFunds")
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactorSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiTransactor) Emergency(opts *bind.TransactOpts, tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "emergency", tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiSession) Emergency(tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.Contract.Emergency(&_Api.TransactOpts, tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiTransactorSession) Emergency(tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.Contract.Emergency(&_Api.TransactOpts, tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// GetTotalAmounts is a paid mutator transaction binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() returns(uint256, uint256)
func (_Api *ApiTransactor) GetTotalAmounts(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "getTotalAmounts")
}

// GetTotalAmounts is a paid mutator transaction binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() returns(uint256, uint256)
func (_Api *ApiSession) GetTotalAmounts() (*types.Transaction, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.TransactOpts)
}

// GetTotalAmounts is a paid mutator transaction binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() returns(uint256, uint256)
func (_Api *ApiTransactorSession) GetTotalAmounts() (*types.Transaction, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.TransactOpts)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns(uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiTransactor) Rebalance(opts *bind.TransactOpts, newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "rebalance", newLow, newHigh)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns(uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiSession) Rebalance(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, newLow, newHigh)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns(uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiTransactorSession) Rebalance(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, newLow, newHigh)
}

// SetCompPortionRatio is a paid mutator transaction binding the contract method 0x0f17937c.
//
// Solidity: function setCompPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactor) SetCompPortionRatio(opts *bind.TransactOpts, ratio uint8) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setCompPortionRatio", ratio)
}

// SetCompPortionRatio is a paid mutator transaction binding the contract method 0x0f17937c.
//
// Solidity: function setCompPortionRatio(uint8 ratio) returns()
func (_Api *ApiSession) SetCompPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetCompPortionRatio(&_Api.TransactOpts, ratio)
}

// SetCompPortionRatio is a paid mutator transaction binding the contract method 0x0f17937c.
//
// Solidity: function setCompPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactorSession) SetCompPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetCompPortionRatio(&_Api.TransactOpts, ratio)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactor) SetMaxTwapDeviation(opts *bind.TransactOpts, _maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setMaxTwapDeviation", _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactorSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetTeam is a paid mutator transaction binding the contract method 0x095cf5c6.
//
// Solidity: function setTeam(address _team) returns()
func (_Api *ApiTransactor) SetTeam(opts *bind.TransactOpts, _team common.Address) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setTeam", _team)
}

// SetTeam is a paid mutator transaction binding the contract method 0x095cf5c6.
//
// Solidity: function setTeam(address _team) returns()
func (_Api *ApiSession) SetTeam(_team common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetTeam(&_Api.TransactOpts, _team)
}

// SetTeam is a paid mutator transaction binding the contract method 0x095cf5c6.
//
// Solidity: function setTeam(address _team) returns()
func (_Api *ApiTransactorSession) SetTeam(_team common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetTeam(&_Api.TransactOpts, _team)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactor) SetTwapDuration(opts *bind.TransactOpts, _twapDuration uint32) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setTwapDuration", _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactorSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// SetUniPortionRatio is a paid mutator transaction binding the contract method 0x624a177a.
//
// Solidity: function setUniPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactor) SetUniPortionRatio(opts *bind.TransactOpts, ratio uint8) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setUniPortionRatio", ratio)
}

// SetUniPortionRatio is a paid mutator transaction binding the contract method 0x624a177a.
//
// Solidity: function setUniPortionRatio(uint8 ratio) returns()
func (_Api *ApiSession) SetUniPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetUniPortionRatio(&_Api.TransactOpts, ratio)
}

// SetUniPortionRatio is a paid mutator transaction binding the contract method 0x624a177a.
//
// Solidity: function setUniPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactorSession) SetUniPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetUniPortionRatio(&_Api.TransactOpts, ratio)
}

// Test3 is a paid mutator transaction binding the contract method 0x0a8e8e01.
//
// Solidity: function test3() returns()
func (_Api *ApiTransactor) Test3(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "test3")
}

// Test3 is a paid mutator transaction binding the contract method 0x0a8e8e01.
//
// Solidity: function test3() returns()
func (_Api *ApiSession) Test3() (*types.Transaction, error) {
	return _Api.Contract.Test3(&_Api.TransactOpts)
}

// Test3 is a paid mutator transaction binding the contract method 0x0a8e8e01.
//
// Solidity: function test3() returns()
func (_Api *ApiTransactorSession) Test3() (*types.Transaction, error) {
	return _Api.Contract.Test3(&_Api.TransactOpts)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3MintCallback(opts *bind.TransactOpts, amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3MintCallback", amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3SwapCallback(opts *bind.TransactOpts, amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3SwapCallback", amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// VaultWithdraw is a paid mutator transaction binding the contract method 0x71c851dd.
//
// Solidity: function vaultWithdraw(address to, uint256 amount0, uint256 amount1) returns(bool)
func (_Api *ApiTransactor) VaultWithdraw(opts *bind.TransactOpts, to common.Address, amount0 *big.Int, amount1 *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "vaultWithdraw", to, amount0, amount1)
}

// VaultWithdraw is a paid mutator transaction binding the contract method 0x71c851dd.
//
// Solidity: function vaultWithdraw(address to, uint256 amount0, uint256 amount1) returns(bool)
func (_Api *ApiSession) VaultWithdraw(to common.Address, amount0 *big.Int, amount1 *big.Int) (*types.Transaction, error) {
	return _Api.Contract.VaultWithdraw(&_Api.TransactOpts, to, amount0, amount1)
}

// VaultWithdraw is a paid mutator transaction binding the contract method 0x71c851dd.
//
// Solidity: function vaultWithdraw(address to, uint256 amount0, uint256 amount1) returns(bool)
func (_Api *ApiTransactorSession) VaultWithdraw(to common.Address, amount0 *big.Int, amount1 *big.Int) (*types.Transaction, error) {
	return _Api.Contract.VaultWithdraw(&_Api.TransactOpts, to, amount0, amount1)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactorSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// ApiBurnUniV3LiquidityIterator is returned from FilterBurnUniV3Liquidity and is used to iterate over the raw logs and unpacked data for BurnUniV3Liquidity events raised by the Api contract.
type ApiBurnUniV3LiquidityIterator struct {
	Event *ApiBurnUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiBurnUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiBurnUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiBurnUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiBurnUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiBurnUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiBurnUniV3Liquidity represents a BurnUniV3Liquidity event raised by the Api contract.
type ApiBurnUniV3Liquidity struct {
	CLow      *big.Int
	CHigh     *big.Int
	Liquidity *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBurnUniV3Liquidity is a free log retrieval operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) FilterBurnUniV3Liquidity(opts *bind.FilterOpts, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (*ApiBurnUniV3LiquidityIterator, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiBurnUniV3LiquidityIterator{contract: _Api.contract, event: "BurnUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchBurnUniV3Liquidity is a free log subscription operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) WatchBurnUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiBurnUniV3Liquidity, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiBurnUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBurnUniV3Liquidity is a log parse operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) ParseBurnUniV3Liquidity(log types.Log) (*ApiBurnUniV3Liquidity, error) {
	event := new(ApiBurnUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMintUniV3LiquidityIterator is returned from FilterMintUniV3Liquidity and is used to iterate over the raw logs and unpacked data for MintUniV3Liquidity events raised by the Api contract.
type ApiMintUniV3LiquidityIterator struct {
	Event *ApiMintUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMintUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMintUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMintUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMintUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMintUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMintUniV3Liquidity represents a MintUniV3Liquidity event raised by the Api contract.
type ApiMintUniV3Liquidity struct {
	NewLow    *big.Int
	NewHigh   *big.Int
	Liquidity *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterMintUniV3Liquidity is a free log retrieval operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) FilterMintUniV3Liquidity(opts *bind.FilterOpts, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (*ApiMintUniV3LiquidityIterator, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiMintUniV3LiquidityIterator{contract: _Api.contract, event: "MintUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchMintUniV3Liquidity is a free log subscription operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) WatchMintUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiMintUniV3Liquidity, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMintUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMintUniV3Liquidity is a log parse operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) ParseMintUniV3Liquidity(log types.Log) (*ApiMintUniV3Liquidity, error) {
	event := new(ApiMintUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMyLogIterator is returned from FilterMyLog and is used to iterate over the raw logs and unpacked data for MyLog events raised by the Api contract.
type ApiMyLogIterator struct {
	Event *ApiMyLog // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMyLogIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMyLog)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMyLog)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMyLogIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMyLogIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMyLog represents a MyLog event raised by the Api contract.
type ApiMyLog struct {
	Arg0 string
	Arg1 *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterMyLog is a free log retrieval operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) FilterMyLog(opts *bind.FilterOpts) (*ApiMyLogIterator, error) {

	logs, sub, err := _Api.contract.FilterLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return &ApiMyLogIterator{contract: _Api.contract, event: "MyLog", logs: logs, sub: sub}, nil
}

// WatchMyLog is a free log subscription operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) WatchMyLog(opts *bind.WatchOpts, sink chan<- *ApiMyLog) (event.Subscription, error) {

	logs, sub, err := _Api.contract.WatchLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMyLog)
				if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMyLog is a log parse operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) ParseMyLog(log types.Log) (*ApiMyLog, error) {
	event := new(ApiMyLog)
	if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiRebalanceIterator is returned from FilterRebalance and is used to iterate over the raw logs and unpacked data for Rebalance events raised by the Api contract.
type ApiRebalanceIterator struct {
	Event *ApiRebalance // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiRebalanceIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiRebalance)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiRebalance)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiRebalanceIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiRebalanceIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiRebalance represents a Rebalance event raised by the Api contract.
type ApiRebalance struct {
	Arg0 common.Address
	U0   *big.Int
	U1   *big.Int
	C0   *big.Int
	C1   *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterRebalance is a free log retrieval operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) FilterRebalance(opts *bind.FilterOpts, arg0 []common.Address) (*ApiRebalanceIterator, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return &ApiRebalanceIterator{contract: _Api.contract, event: "Rebalance", logs: logs, sub: sub}, nil
}

// WatchRebalance is a free log subscription operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) WatchRebalance(opts *bind.WatchOpts, sink chan<- *ApiRebalance, arg0 []common.Address) (event.Subscription, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiRebalance)
				if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRebalance is a log parse operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) ParseRebalance(log types.Log) (*ApiRebalance, error) {
	event := new(ApiRebalance)
	if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiVaultWithdrawIterator is returned from FilterVaultWithdraw and is used to iterate over the raw logs and unpacked data for VaultWithdraw events raised by the Api contract.
type ApiVaultWithdrawIterator struct {
	Event *ApiVaultWithdraw // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiVaultWithdrawIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiVaultWithdraw)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiVaultWithdraw)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiVaultWithdrawIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiVaultWithdrawIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiVaultWithdraw represents a VaultWithdraw event raised by the Api contract.
type ApiVaultWithdraw struct {
	To      common.Address
	Amount0 *big.Int
	Amount1 *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterVaultWithdraw is a free log retrieval operation binding the contract event 0x97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de.
//
// Solidity: event VaultWithdraw(address indexed to, uint256 amount0, uint256 amount1)
func (_Api *ApiFilterer) FilterVaultWithdraw(opts *bind.FilterOpts, to []common.Address) (*ApiVaultWithdrawIterator, error) {

	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "VaultWithdraw", toRule)
	if err != nil {
		return nil, err
	}
	return &ApiVaultWithdrawIterator{contract: _Api.contract, event: "VaultWithdraw", logs: logs, sub: sub}, nil
}

// WatchVaultWithdraw is a free log subscription operation binding the contract event 0x97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de.
//
// Solidity: event VaultWithdraw(address indexed to, uint256 amount0, uint256 amount1)
func (_Api *ApiFilterer) WatchVaultWithdraw(opts *bind.WatchOpts, sink chan<- *ApiVaultWithdraw, to []common.Address) (event.Subscription, error) {

	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "VaultWithdraw", toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiVaultWithdraw)
				if err := _Api.contract.UnpackLog(event, "VaultWithdraw", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVaultWithdraw is a log parse operation binding the contract event 0x97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de.
//
// Solidity: event VaultWithdraw(address indexed to, uint256 amount0, uint256 amount1)
func (_Api *ApiFilterer) ParseVaultWithdraw(log types.Log) (*ApiVaultWithdraw, error) {
	event := new(ApiVaultWithdraw)
	if err := _Api.contract.UnpackLog(event, "VaultWithdraw", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
